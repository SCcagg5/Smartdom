version: "3"
networks:
    meet.jitsi:
    proxy:
      driver: bridge

services:
    web:
        image: jitsi/web
        restart: ${RESTART_POLICY}
        expose:
            - 80
            - 443
        volumes:
            - ${CONFIG}/web:/config
            - ${CONFIG}/web/letsencrypt:/etc/letsencrypt
            - ${CONFIG}/transcripts:/usr/share/jitsi-meet/transcripts
        environment:
            - ENABLE_AUTH
            - ENABLE_GUESTS
            - ENABLE_LETSENCRYPT
            - ENABLE_HTTP_REDIRECT
            - ENABLE_TRANSCRIPTIONS
            - DISABLE_HTTPS
            - JICOFO_AUTH_USER
            - PUBLIC_URL
            - XMPP_DOMAIN
            - XMPP_AUTH_DOMAIN
            - XMPP_BOSH_URL_BASE
            - XMPP_GUEST_DOMAIN
            - XMPP_MUC_DOMAIN
            - XMPP_RECORDER_DOMAIN
            - ETHERPAD_URL_BASE
            - TZ
            - JIBRI_BREWERY_MUC
            - JIBRI_PENDING_TIMEOUT
            - JIBRI_XMPP_USER
            - JIBRI_XMPP_PASSWORD
            - JIBRI_RECORDER_USER
            - JIBRI_RECORDER_PASSWORD
            - ENABLE_RECORDING
            - VIRTUAL_HOST=meet.smartdom.ch
            - VIRTUAL_PORT=80
            - LETSENCRYPT_HOST=meet.smartdom.ch
            - LETSENCRYPT_EMAIL=eliot.courtel@wanadoo.fr
        networks:
            - proxy
            - ${XMPP_DOMAIN}

    prosody:
        image: jitsi/prosody
        restart: ${RESTART_POLICY}
        expose:
            - '5222'
            - '5347'
            - '5280'
        volumes:
            - ${CONFIG}/prosody:/config
        environment:
            - AUTH_TYPE
            - ENABLE_AUTH
            - ENABLE_GUESTS
            - GLOBAL_MODULES
            - GLOBAL_CONFIG
            - LDAP_URL
            - LDAP_BASE
            - LDAP_BINDDN
            - LDAP_BINDPW
            - LDAP_FILTER
            - LDAP_AUTH_METHOD
            - LDAP_VERSION
            - LDAP_USE_TLS
            - LDAP_TLS_CIPHERS
            - LDAP_TLS_CHECK_PEER
            - LDAP_TLS_CACERT_FILE
            - LDAP_TLS_CACERT_DIR
            - LDAP_START_TLS
            - XMPP_DOMAIN
            - XMPP_AUTH_DOMAIN
            - XMPP_GUEST_DOMAIN
            - XMPP_MUC_DOMAIN
            - XMPP_INTERNAL_MUC_DOMAIN
            - XMPP_MODULES
            - XMPP_MUC_MODULES
            - XMPP_INTERNAL_MUC_MODULES
            - XMPP_RECORDER_DOMAIN
            - JICOFO_COMPONENT_SECRET
            - JICOFO_AUTH_USER
            - JICOFO_AUTH_PASSWORD
            - JVB_AUTH_USER
            - JVB_AUTH_PASSWORD
            - JIGASI_XMPP_USER
            - JIGASI_XMPP_PASSWORD
            - JIBRI_XMPP_USER
            - JIBRI_XMPP_PASSWORD
            - JIBRI_RECORDER_USER
            - JIBRI_RECORDER_PASSWORD
            - JWT_APP_ID
            - JWT_APP_SECRET
            - JWT_ACCEPTED_ISSUERS
            - JWT_ACCEPTED_AUDIENCES
            - JWT_ASAP_KEYSERVER
            - JWT_ALLOW_EMPTY
            - JWT_AUTH_TYPE
            - JWT_TOKEN_AUTH_MODULE
            - LOG_LEVEL
            - TZ
        networks:
            meet.jitsi:
                aliases:
                    - ${XMPP_SERVER}

    jicofo:
        image: jitsi/jicofo
        restart: ${RESTART_POLICY}
        volumes:
            - ${CONFIG}/jicofo:/config
        environment:
            - ENABLE_AUTH
            - XMPP_DOMAIN
            - XMPP_AUTH_DOMAIN
            - XMPP_INTERNAL_MUC_DOMAIN
            - XMPP_SERVER
            - JICOFO_COMPONENT_SECRET
            - JICOFO_AUTH_USER
            - JICOFO_AUTH_PASSWORD
            - JICOFO_RESERVATION_REST_BASE_URL
            - JVB_BREWERY_MUC
            - JIGASI_BREWERY_MUC
            - JIGASI_SIP_URI
            - JIBRI_BREWERY_MUC
            - JIBRI_PENDING_TIMEOUT
            - TZ
        depends_on:
            - prosody
        networks:
            meet.jitsi:


    jvb:
        image: jitsi/jvb
        restart: ${RESTART_POLICY}
        ports:
            - '${JVB_PORT}:${JVB_PORT}/udp'
            - '${JVB_TCP_PORT}:${JVB_TCP_PORT}'
        volumes:
            - ${CONFIG}/jvb:/config
        environment:
            - DOCKER_HOST_ADDRESS
            - XMPP_AUTH_DOMAIN
            - XMPP_INTERNAL_MUC_DOMAIN
            - XMPP_SERVER
            - JVB_AUTH_USER
            - JVB_AUTH_PASSWORD
            - JVB_BREWERY_MUC
            - JVB_PORT
            - JVB_TCP_HARVESTER_DISABLED
            - JVB_TCP_PORT
            - JVB_STUN_SERVERS
            - JVB_ENABLE_APIS
            - TZ
        depends_on:
            - prosody
        networks:
            meet.jitsi:

    posteio:
    image: analogic/poste.io
    ports:
      - 0.0.0.0:25:25
      - 110:110
      - 143:143
      - 465:465
      - 587:587
      - 993:993
      - 995:995
      - 4190:4190
    expose:
      - 80
    volumes:
      - ./posteio:/data
    hostname: mail
    domainname: smartdom.ch
    environment:
      - TZ=Europe/Prague
      - HTTPS=OFF
      - VIRTUAL_HOST=mail.smartdom.ch
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=mail.smartdom.ch
      - LETSENCRYPT_EMAIL=eliot.courtel@wanadoo.fr
    networks:
      - proxy

    nginx:
      image: jwilder/nginx-proxy:alpine
      container_name: nginx
      restart: always
      labels:
        com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: 'true'
      ports:
        - 80:80
        - 443:443
      volumes:
        - ./proxy/logs/global:/var/log/nginx
        - ./proxy/conf/proxy.conf:/etc/nginx/conf.d/proxy.conf:ro
        - ./proxy/vhost:/etc/nginx/vhost.d
        - ./proxy/passwd:/etc/nginx/htpasswd
        - /srv/nginx/data/html:/usr/share/nginx/html
        - /srv/nginx/data/certs:/etc/nginx/certs:ro
        - /var/run/docker.sock:/tmp/docker.sock:ro
      networks:
        - proxy

    letsencrypt:
      image: jrcs/letsencrypt-nginx-proxy-companion
      container_name: letsencrypt
      volumes:
        - ./proxy/vhost:/etc/nginx/vhost.d
        - /srv/nginx/data/certs:/etc/nginx/certs:rw
        - /srv/nginx/data/html:/usr/share/nginx/html
        - /var/run/docker.sock:/var/run/docker.sock:ro
      depends_on:
        - nginx
      networks:
        - proxy
